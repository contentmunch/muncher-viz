{"version":3,"file":"Barchart.stories-e4187acc.js","sources":["../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/descending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/number.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/ticks.js","../../node_modules/d3-array/src/max.js","../../node_modules/d3-array/src/range.js","../../node_modules/d3-axis/src/identity.js","../../node_modules/d3-axis/src/axis.js","../../node_modules/d3-interpolate/src/numberArray.js","../../node_modules/d3-interpolate/src/array.js","../../node_modules/d3-interpolate/src/date.js","../../node_modules/d3-interpolate/src/object.js","../../node_modules/d3-interpolate/src/value.js","../../node_modules/d3-interpolate/src/round.js","../../node_modules/d3-format/src/formatDecimal.js","../../node_modules/d3-format/src/exponent.js","../../node_modules/d3-format/src/formatGroup.js","../../node_modules/d3-format/src/formatNumerals.js","../../node_modules/d3-format/src/formatSpecifier.js","../../node_modules/d3-format/src/formatTrim.js","../../node_modules/d3-format/src/formatPrefixAuto.js","../../node_modules/d3-format/src/formatRounded.js","../../node_modules/d3-format/src/formatTypes.js","../../node_modules/d3-format/src/identity.js","../../node_modules/d3-format/src/locale.js","../../node_modules/d3-format/src/defaultLocale.js","../../node_modules/d3-format/src/precisionFixed.js","../../node_modules/d3-format/src/precisionPrefix.js","../../node_modules/d3-format/src/precisionRound.js","../../node_modules/d3-scale/src/band.js","../../node_modules/d3-scale/src/constant.js","../../node_modules/d3-scale/src/number.js","../../node_modules/d3-scale/src/continuous.js","../../node_modules/d3-scale/src/tickFormat.js","../../node_modules/d3-scale/src/linear.js","../../node_modules/d3-shape/src/offset/none.js","../../node_modules/d3-shape/src/order/none.js","../../node_modules/d3-shape/src/stack.js","../../src/components/barChart/StackedBarChart.tsx"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import React, {RefObject, useCallback, useEffect} from \"react\";\nimport * as d3 from \"d3\";\nimport \"./assets/StackedBarChart.scss\";\nimport {FieldValue, StackedBarChartData} from \"./data/StackedBarChartData\";\n\nexport const StackedBarChart: React.FC<BarChartProps> = (\n    {data, comparisonData, colorRange, toPercentage, withLegend}) => {\n    const svgRef: RefObject<SVGSVGElement> = React.createRef();\n    const legendRef: RefObject<SVGSVGElement> = React.createRef();\n    const draw = useCallback(() => {\n\n        const combineData = (): StackedBarChartData => {\n            const combinedData: StackedBarChartData = {} as StackedBarChartData;\n            combinedData.totalField = data.totalField;\n            combinedData.titleField = data.titleField;\n            combinedData.stackFields = data.stackFields;\n            const extractPostfix = (titleSeparator: string, value?: string | number): string => {\n                if (value) {\n                    const titleArray = value.toString().split(titleSeparator);\n                    return titleArray.length > 1 ? titleArray[1] : \"*\";\n                }\n                return \"*\";\n            };\n            const extractTitle = (titleSeparator: string, value?: string | number): string | null => {\n                return value ? value.toString().split(titleSeparator)[0] : null;\n            };\n            if (comparisonData) {\n\n                combinedData.values = [];\n                let lastPostFix = \"*\";\n                let emptyCount = 0;\n                data.values.forEach((value, index) => {\n                    combinedData.values.push(value);\n                    if (data.titleSeparator) {\n                        const compareIndex = index - emptyCount;\n                        const referenceTitle = extractTitle(data.titleSeparator, value[data.titleField]);\n                        const title = comparisonData.values[compareIndex] ? extractTitle(data.titleSeparator, comparisonData.values[compareIndex][data.titleField]) : null;\n\n                        if (referenceTitle === title) {\n                            combinedData.values.push(comparisonData.values[compareIndex]);\n                            lastPostFix = extractPostfix(data.titleSeparator, comparisonData.values[compareIndex][data.titleField]);\n                        } else {\n                            const titleFieldValue: FieldValue = {};\n                            titleFieldValue[combinedData.titleField] = referenceTitle + data.titleSeparator + lastPostFix;\n                            combinedData.values.push(titleFieldValue);\n                            emptyCount++;\n                        }\n\n                    } else {\n                        if (comparisonData.values[index])\n                            combinedData.values.push(comparisonData.values[index]);\n                    }\n\n                });\n            } else {\n                combinedData.values = data.values;\n            }\n            return combinedData;\n        }\n\n        const barData = combineData();\n        if (barData && barData.values && barData.values.length > 0) {\n            const barHeight = comparisonData ? 20 : 30;\n            const siblingGap = 3;\n            const margin = {top: 0, right: 10, bottom: 40, left: comparisonData ? 150 : 110};\n            const viewBoxWidth = 580;\n            const viewBox = `0 0 ${viewBoxWidth} ${barData.values.length * (barHeight) + 20}`;\n\n            const height = barData.values.length * barHeight;\n            const width = viewBoxWidth - margin.left - margin.right;\n            const defaultColorRange = [\"#4e79a7\", \"#59a14f\", \"#f28e2c\", \"#e15759\", \"#261759\", \"#acd643\", \"#daf2dc\"];\n            const numberToPercent = (d: number, total: number) => toPercentage ? d / total * 100 : d;\n            const percentToNumber = (percent: number, total: number) => toPercentage ? (percent * total / 100).toFixed(0) : percent;\n            const fieldTotal = (fieldValue: FieldValue): number => {\n                if (toPercentage) {\n                    let percentTotal: number = 0;\n                    barData.stackFields.forEach(field => {\n                        percentTotal += numberToPercent(+fieldValue[field], +fieldValue[barData.totalField]);\n                    });\n                    return percentTotal;\n                } else\n                    return +fieldValue[barData.totalField];\n            };\n            const formatData = (num: number): string => toPercentage ? num.toFixed(0) + \"%\" : num.toString();\n            const maxValue = (): number => {\n                const max = d3.max(barData.values, d => fieldTotal(d));\n                return max === undefined ? 0 : +max.toFixed(0);\n            };\n            const stackData = d3.stack<any>().keys(barData.stackFields)\n                .value((d, key) => {\n                    return numberToPercent(d[key], d[barData.totalField]);\n                });\n\n            const y = d3.scaleBand()\n                .rangeRound([0, height])\n                .paddingInner(0.2)\n                .align(0.1)\n                .domain(barData.values.map(d => d[barData.titleField] as string));\n\n            const x = d3.scaleLinear()\n                .rangeRound([0, width])\n                .domain([0, maxValue()]).nice();\n\n            const z = d3.scaleOrdinal()\n                .range(colorRange ? colorRange : defaultColorRange)\n                .domain(barData.stackFields);\n\n            const colorToStackField = (color: string | undefined | null): string => {\n                if (color === undefined || color === null) return \"\";\n                const index = colorRange ? colorRange.findIndex(value => value === color) : defaultColorRange.findIndex(value => value === color);\n                return index > -1 && index < barData.stackFields.length ? barData.stackFields[index] : \"\";\n            }\n\n            const svg = d3.select(svgRef.current)\n                .attr(\"viewBox\", viewBox);\n\n            svg.selectAll(\"g\").remove();\n\n            const barChart = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n            const g = barChart.append(\"g\")\n                .selectAll(\"g\")\n                .data(stackData(barData.values))\n                .join(\"g\")\n                .attr(\"fill-opacity\", 0.9);\n\n            const fill = g.attr(\"fill\", d => z(d.key) as string);\n\n            const bar = fill.selectAll(\"rect\")\n                .data(d => d)\n                .enter();\n\n            bar.append(\"rect\")\n                .classed(\"bar-rectangle\", true)\n                .attr(\"y\", (d, i) => {\n                    return y(d.data[barData.titleField]) as number - (comparisonData && i % 2 === 1 ? siblingGap : 0);\n                })\n                .attr(\"x\", d => x(d[0]))\n                .attr(\"width\", d => x(d[1]) - x(d[0]))\n                .attr(\"height\", y.bandwidth())\n                .append(\"title\").text((d, i, group) => {\n                const fillColor = group[i].parentNode?.parentElement?.getAttribute(\"fill\");\n                const stackField = colorToStackField(fillColor);\n                const value = d[1] - d[0];\n\n                return `${stackField}: ${toPercentage ? formatData(value) : \"\"} (${percentToNumber(value, d.data[barData.totalField])} of ${d.data[barData.totalField]})`;\n            });\n            bar.append(\"text\")\n                .text((d) => {\n                    const value = d[1] - d[0];\n                    const width = x(d[1]) - x(d[0]);\n                    const percentText = `${formatData(value)} (${percentToNumber(value, d.data[barData.totalField])} of ${d.data[barData.totalField]})`;\n                    const numberText = `${value} of ${d.data[barData.totalField]}`;\n                    const minWidthForPercentText = 50;\n                    if (toPercentage)\n                        return width > minWidthForPercentText ? percentText : \"\";\n                    const minWidthForText = 30;\n                    return width > minWidthForText ? numberText : \"\";\n                })\n                .classed(\"bar-text\", true)\n                .attr(\"y\", (d, i) => {\n                    return y(d.data[barData.titleField]) as number + barHeight / 2 - (comparisonData && i % 2 === 1 ? siblingGap : 0);\n                })\n                .attr(\"text-anchor\", \"end\")\n                .attr(\"x\", d => {\n                    const width = x(d[1]) - x(d[0]);\n                    return x(d[0]) + width - 5;\n                });\n\n            barChart.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", () => {\n\n                    return `translate(0,0)`;\n                })\n                .call(d3.axisLeft(y).tickSizeOuter(0));\n\n            barChart.append(\"g\")\n                .attr(\"class\", \"axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(x).tickFormat(x => formatData(x.valueOf())));\n\n            if (withLegend) {\n\n                const legendViewBox = `0 0 45 ${barData.stackFields.length * 8}`;\n                const chartLegend = d3.select(legendRef.current).attr(\"viewBox\", legendViewBox);\n                chartLegend.selectAll(\"g\").remove();\n                chartLegend.selectAll(\"text\").remove();\n\n                chartLegend.attr(\"text-anchor\", \"end\");\n                const legend = chartLegend.selectAll(\"g\")\n                    .data(barData.stackFields.slice())\n                    .join(\"g\")\n                    .attr(\"transform\", (_d: string, i: number) => \"translate(\" + margin.right + \",\" + (i * 7) + \")\");\n\n\n                legend.append(\"rect\")\n                    .attr(\"fill-opacity\", 0.9)\n                    .attr(\"x\", 28)\n                    .attr(\"width\", 6)\n                    .attr(\"height\", 6)\n                    .attr(\"fill\", d => z(d) as string);\n\n                legend.append(\"text\")\n                    .attr(\"x\", 26)\n                    .attr(\"dy\", \"0.24rem\")\n                    .text(d => d);\n            }\n        }\n\n\n    }, [svgRef, legendRef, data, colorRange, toPercentage, comparisonData, withLegend]);\n\n    useEffect(() => {\n        draw();\n    }, [draw]);\n    return (\n        <div className=\"muncher-bar-chart\">\n            <svg ref={svgRef} className=\"svg-bar-chart\"/>\n            {withLegend ?\n                <svg className=\"svg-bar-chart-legend\" ref={legendRef}>\n\n                </svg>\n\n                : \"\"}\n        </div>\n    );\n\n};\n\n\nexport interface BarChartProps {\n    data: StackedBarChartData;\n    comparisonData?: StackedBarChartData;\n    toPercentage?: boolean;\n    colorRange?: string[];\n    withLegend?: boolean;\n}\n"],"names":["ascending","a","b","descending","bisector","f","compare1","compare2","delta","d","x","zero","left","lo","hi","mid","right","center","i","number","ascendingBisect","bisectRight","bisect","e10","e5","e2","tickSpec","start","stop","count","step","power","error","factor","i1","i2","inc","ticks","reverse","n","tickIncrement","tickStep","max","values","valueof","value","index","range","identity$2","top","bottom","epsilon","translateX","translateY","y","scale","offset","entering","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","format","identity","spacing","range0","range1","position","selection","path","tick","tickExit","tickEnter","line","text","p","_","axisBottom","axisLeft","numberArray","c","t","isNumberArray","genericArray","nb","na","date","object","interpolate","constant","color","rgb","string","interpolateRound","formatDecimal","formatDecimalParts","coefficient","exponent","formatGroup","grouping","thousands","width","j","g","length","formatNumerals","numerals","re","formatSpecifier","specifier","match","FormatSpecifier","formatTrim","s","out","i0","prefixExponent","formatPrefixAuto","formatRounded","formatTypes","identity$1","map","prefixes","formatLocale","locale","group","currencyPrefix","currencySuffix","decimal","percent","minus","nan","newFormat","fill","align","sign","symbol","comma","precision","trim","type","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","e","defaultLocale","definition","precisionFixed","precisionPrefix","precisionRound","band","ordinal","domain","ordinalRange","r0","r1","bandwidth","round","paddingInner","paddingOuter","rescale","sequence","initRange","constants","unit","normalize","clamper","bimap","d0","d1","polymap","r","copy","source","target","transformer","interpolateValue","untransform","unknown","clamp","piecewise","output","input","interpolateNumber","u","continuous","linearish","prestep","maxIter","linear","none$1","series","order","s0","s1","m","none","o","stackValue","key","stackSeries","stack","keys","orderNone","offsetNone","data","sz","oz","array","StackedBarChart","comparisonData","colorRange","toPercentage","withLegend","svgRef","React","legendRef","draw","useCallback","barData","combinedData","extractPostfix","titleSeparator","titleArray","extractTitle","lastPostFix","emptyCount","compareIndex","referenceTitle","title","titleFieldValue","barHeight","siblingGap","margin","viewBoxWidth","viewBox","height","defaultColorRange","numberToPercent","total","percentToNumber","fieldTotal","fieldValue","percentTotal","field","formatData","num","maxValue","d3.max","stackData","d3.stack","d3.scaleBand","d3.scaleLinear","z","d3.scaleOrdinal","colorToStackField","svg","d3.select","barChart","bar","fillColor","_b","_a","stackField","width2","percentText","numberText","minWidthForPercentText","d3.axisLeft","d3.axisBottom","x2","legendViewBox","chartLegend","legend","_d","useEffect","jsxs","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39]}