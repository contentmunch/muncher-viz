"use strict";(self.webpackChunk_contentmunch_muncher_viz=self.webpackChunk_contentmunch_muncher_viz||[]).push([[816],{"./src/pieChart/PieChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PieChart_stories});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./node_modules/d3/src/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const PieChart_PieChart=_ref=>{let{data,withLegend,legendTitle,onClick,valueFormatter,colorRange}=_ref;const chartRef=react.createRef(),legendRef=react.createRef(),clickHandler=(0,react.useCallback)(((e,d)=>{onClick&&onClick(d.index)}),[onClick]);return(0,react.useEffect)((()=>{const pie=src.ve8().padAngle(.005).sort(null).value((d=>d.value)),arc=src.Nb1().innerRadius(0).outerRadius(49),pieData=pie(data),legendText=(data,index)=>data.legend?data.legend:data.title+" ("+formatNumber(data.value,index)+")",formatNumber=(num,index)=>valueFormatter?valueFormatter(num,index):num,color=src.PKp().domain(src.Wem(data,(d=>d.title))).range(colorRange||["#4e79a7","#59a14f","#f28e2c","#e15759","#261759","#acd643","#daf2dc"]),chart=src.Ys(chartRef.current).attr("viewBox","-50 -50 100 100");if(chart.selectAll("g").remove(),chart.selectAll("path").remove(),chart.selectAll("path").data(pieData).join("path").on("click",clickHandler).classed("selected",(d=>d.data.isSelected)).attr("fill",(d=>color(d.data.title))).attr("fill-opacity",.9).attr("d",arc).append("title").text((d=>legendText(d.data,d.index))),chart.append("g").classed("text",!0).attr("text-anchor","middle").selectAll("text").data(pieData).join("text").attr("transform",(d=>"translate(".concat(arc.centroid(d),")"))).call((text=>text.filter((d=>d.endAngle-d.startAngle>.4)).append("tspan").attr("y","-0.4em").classed("title",!0).text((d=>d.data.title)))).call((text=>text.filter((d=>d.endAngle-d.startAngle>.4)).append("tspan").attr("x",0).attr("y","0.7em").attr("fill-opacity",.7).classed("value",!0).text((d=>"("+formatNumber(d.data.value,d.index)+")")))),withLegend){const legend=src.Ys(legendRef.current).attr("viewBox","0 0 70 100");legend.selectAll("g").remove(),legend.selectAll("text").remove(),legend.append("text").text(legendTitle||"Legend").attr("y",10).attr("x",6).classed("legend-title",!0);const legendGraphics=legend.selectAll("g").data(pieData).enter().append("g");legendGraphics.attr("transform",((d,i)=>"translate(6,".concat(10*i+14,")"))).append("rect").data(pieData).attr("width",6).attr("height",6).on("click",clickHandler).classed("legend-rect",!0).classed("legend-rect--selected",(d=>d.data.isSelected)).attr("fill",(d=>color(d.data.title))).attr("fill-opacity",.9),legendGraphics.append("text").data(pieData).text((d=>legendText(d.data,d.index))).on("click",clickHandler).classed("legend-text",!0).classed("legend-text--selected",(d=>d.data.isSelected)).attr("y",4).attr("x",8)}}),[chartRef,clickHandler,data,legendRef,legendTitle,valueFormatter,withLegend,colorRange]),(0,jsx_runtime.jsxs)("div",{className:"muncher-pie-chart",children:[(0,jsx_runtime.jsx)("svg",{ref:chartRef,className:"svg-pie-chart"}),withLegend?(0,jsx_runtime.jsx)("svg",{className:"svg-pie-chart-legend",ref:legendRef}):""]})};try{PieChart_PieChart.displayName="PieChart",PieChart_PieChart.__docgenInfo={description:"",displayName:"PieChart",props:{data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"PieChartData[]"}},withLegend:{defaultValue:null,description:"",name:"withLegend",required:!1,type:{name:"boolean"}},legendTitle:{defaultValue:null,description:"",name:"legendTitle",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((index: number) => void)"}},valueFormatter:{defaultValue:null,description:"",name:"valueFormatter",required:!1,type:{name:"((num: number, index: number) => string)"}},colorRange:{defaultValue:null,description:"",name:"colorRange",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pieChart/PieChart.tsx#PieChart"]={docgenInfo:PieChart_PieChart.__docgenInfo,name:"PieChart",path:"src/pieChart/PieChart.tsx#PieChart"})}catch(__react_docgen_typescript_loader_error){}const PieChart_stories={title:"PieChart",component:PieChart_PieChart,parameters:{layout:"fullscreen"}},Default=()=>{const[selectedIndex,setSelectedIndex]=(0,react.useState)(0),[pieData,setPieData]=(0,react.useState)([{title:"First",value:60,isSelected:!0,legend:"First (23: 60%)"},{title:"Second",value:1,isSelected:!1},{title:"Third",value:5,isSelected:!1}]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(PieChart_PieChart,{data:pieData,onClick:index=>{const currentData=[...pieData];currentData[index].isSelected?(currentData[index].isSelected=!1,setSelectedIndex(-1)):(currentData.forEach((value=>{value.isSelected=!1})),setSelectedIndex(index),currentData[index].isSelected=!0),setPieData(currentData)},valueFormatter:num=>num+"%",withLegend:!0}),(0,jsx_runtime.jsx)("button",{onClick:()=>{const currentData=[...pieData];currentData[1].value=1===currentData[1].value?10:1,setPieData(currentData)},children:"Change Data"}),-1!==selectedIndex?(0,jsx_runtime.jsxs)("p",{children:["Selected: ",pieData[selectedIndex].title]}):""]})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [pieData, setPieData] = useState<PieChartData[]>([{\n    title: "First",\n    value: 60,\n    isSelected: true,\n    legend: "First (23: 60%)"\n  }, {\n    title: "Second",\n    value: 1,\n    isSelected: false\n  }, {\n    title: "Third",\n    value: 5,\n    isSelected: false\n  }]);\n  const handleButtonClicked = () => {\n    const currentData = [...pieData];\n    currentData[1].value = currentData[1].value === 1 ? 10 : 1;\n    setPieData(currentData);\n  };\n  const handleOnClick = (index: number) => {\n    const currentData = [...pieData];\n    if (currentData[index].isSelected) {\n      currentData[index].isSelected = false;\n      setSelectedIndex(-1);\n    } else {\n      currentData.forEach(value => {\n        value.isSelected = false;\n      });\n      setSelectedIndex(index);\n      currentData[index].isSelected = true;\n    }\n    setPieData(currentData);\n  };\n  return <>\n            <PieChart data={pieData} onClick={handleOnClick} valueFormatter={num => {\n      return num + "%";\n    }} withLegend={true} />\n            <button onClick={handleButtonClicked}>Change Data</button>\n            {selectedIndex !== -1 ? <p>Selected: {pieData[selectedIndex].title}</p> : ""}\n        </>;\n}',...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);